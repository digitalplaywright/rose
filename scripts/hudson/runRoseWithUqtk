#!/bin/bash -e
#
#  TODO: add more summary info
#  - List of durations for each step in the job
#
#
source scripts/hudson/runBuildStep.sh
source scripts/hudson/roseUtilities.sh
#########################################################################################
( echo ) |filter "Starting ${ROSE_TEST_BUILD_STYLE}..."

[ ! -n "$ROSE_CONFIGURE_PREFIX" ] && killStep "\$ROSE_CONFIGURE_PREFIX is undefined"

machine=`uname -m`
machine_os=`uname -s`
machine_name=`uname -n`
start_time=`date`
hudson_start_time_seconds="$(date +%s)"
TOP_LEVEL_ROSE_DIRECTORY="$PWD"
LOG_LOCATION="$PWD"

#########################################################################################
#
#  GCC
#
#########################################################################################
echo "Setting up the GCC environment" 

  if test "x$ROSE_TEST_GCC_VERSION" != "x4.1.2" ; then
    GCCROOT=/usr/apps/gcc/$ROSE_TEST_GCC_VERSION
    if test -e $GCCROOT/setup.sh ; then
      set +e
      . $GCCROOT/setup.sh
      set -e
        else
        # This is the case for g++ 3.4.6 (since there is no uniform existence of a setup.sh file).
            echo "Handling case of no $GCCROOT/setup.sh file."
      export PATH="$GCCROOT/bin:$PATH"

          # DQ (2/15/2010): For 64-bit this has to be setup to use lib64 explicitly
          # export LD_LIBRARY_PATH="$GCCROOT/lib:$LD_LIBRARY_PATH"
            if test "$MACHINE" = "i686" ; then
         export LD_LIBRARY_PATH="$GCCROOT/lib:$LD_LIBRARY_PATH"
            else
         export LD_LIBRARY_PATH="$GCCROOT/lib64:$GCCROOT/lib:$LD_LIBRARY_PATH"
            fi
        fi
  fi

#########################################################################################
#
#  Configure Flags 
#
#  Note that Boost 1.39 and greater require using "--with-boost-libdir"
#
#########################################################################################
echo "Setting up the ROSE configuration flags" 

CONFIGURE_FLAGS="\
  $CONFIGURE_FLAGS \
  --with-boost=${ROSE_TEST_BOOST_PATH} \
  --with-boost-libdir=${ROSE_TEST_BOOST_PATH}/lib \
  --with-java=${ROSE_TEST_JAVA_PATH} \
  --with-C_DEBUG=-g \
  --with-CXX_WARNINGS=-Wall \
  --with-uqtk-include=${ROSE_TEST_UQTK_PATH}/include"

#########################################################################################
#
##
   dumpHudsonEnvironment "${LOG_LOCATION}/HudsonEnvironment-before-tests.log"
##
#
#########################################################################################

set -e
#########################################################################################
#
#  ROSE/build
#
#########################################################################################
(

   ./build

) 2>&1 |filterStep "./build" 
[ ${PIPESTATUS[0]} -ne 0 ] && killStep "./build"
#########################################################################################
#
#  Setup Build & Install trees 
#
#########################################################################################
for DIR in "ROSE-install" "ROSE-build" ; do
  (

      [ -d "./$DIR" ] && chmod -R u+xw ./$DIR && safe_rm_rf `pwd`/$DIR
      mkdir ./$DIR 

  ) 2>&1 |filterStep "$DIR setup" 
  [ ${PIPESTATUS[0]} -ne 0 ] && killStep "workspace setup"
done
cd ROSE-build
#########################################################################################
#
#  ROSE/configure
#
#########################################################################################
(

    ../configure --prefix=${ROSE_CONFIGURE_PREFIX} ${CONFIGURE_FLAGS}

) 2>&1 |filterStep "configure" 
[ ${PIPESTATUS[0]} -ne 0 ] && killStep "configure"

set -x
#-------------------------------------------------------------------------------
# MAKE: librose.la
make -j${NUM_PROCESS} -C src/
make check -j${NUM_PROCESS} -C projects/UQ

#-------------------------------------------------------------------------------
# SUMMARY
#-------------------------------------------------------------------------------
dumpHudsonEnvironment "${LOG_LOCATION}/HudsonEnvironment-after-tests.log"

